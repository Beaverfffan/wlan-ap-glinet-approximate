#!/bin/sh /etc/rc.common
. /lib/functions.sh
START=00
STOP=95

WD_ENABLE_GPIO=498
WD_SET_GPIO=499

# To test the watchdog function, run the command:
# kill -9 $(ps | grep '[w]atchdog_ctl.sh' | awk '{print $1}')
# The board will reset after watchdog timed out

start() {
	case "$(board_name)" in
		emplus,wap581)
	       wd_enable
	    ;;
    esac
}	

wd_enable() {
	# WD_ENABLE
	#
	if [ ! -d "/sys/class/gpio/gpio${WD_ENABLE_GPIO}" ]
	then
		echo "${WD_ENABLE_GPIO}" > /sys/class/gpio/export
		echo "out" > /sys/class/gpio/gpio${WD_ENABLE_GPIO}/direction
	fi
	echo "0" > /sys/class/gpio/gpio${WD_ENABLE_GPIO}/value
	
	# WD_SET
	#
	if [ ! -d "/sys/class/gpio/gpio${WD_SET_GPIO}" ]
	then
		echo "${WD_SET_GPIO}" > /sys/class/gpio/export
		echo "out" > /sys/class/gpio/gpio${WD_SET_GPIO}/direction
	fi
	
	# Call watchdog_ctl.sh $WD_ENABLE_GPIO $WD_SET_GPIO $TIMER
	/sbin/watchdog_ctl.sh ${WD_ENABLE_GPIO} ${WD_SET_GPIO} 1 &
}

stop() {

	# disable watchdog
	if [ ! -d "/sys/class/gpio/gpio${WD_ENABLE_GPIO}" ]
	then
		echo "${WD_ENABLE_GPIO}" > /sys/class/gpio/export
		echo "out" > /sys/class/gpio/gpio${WD_ENABLE_GPIO}/direction
	fi
	echo "1" > /sys/class/gpio/gpio${WD_ENABLE_GPIO}/value
	
	# kill the background script
	kill -9 $(ps | grep '[w]atchdog_ctl.sh' | awk '{print $1}')
	echo "0" > /sys/class/gpio/gpio${WD_SET_GPIO}/value
}
